<?xml version="1.0" encoding="utf-8"?>
<RuleSet Name="Aspekt Essential Code Analysis Rules" Description="Essential code analysis rules for the Aspekt project - focused on critical issues only" ToolsVersion="17.0">
  <!-- Critical Correctness Rules -->
  <Rules AnalyzerId="Microsoft.Analyzers.ManagedCodeAnalysis" RuleNamespace="Microsoft.Rules.Managed">
    <!-- Memory leaks and resource management -->
    <Rule Id="CA1001" Action="Warning" />  <!-- Types that own disposable fields should be disposable -->
    <Rule Id="CA2000" Action="Warning" />  <!-- Dispose objects before losing scope -->
    <Rule Id="CA2213" Action="Warning" />  <!-- Disposable fields should be disposed -->
    
    <!-- Security vulnerabilities -->
    <Rule Id="CA2100" Action="Warning" />  <!-- Review SQL queries for security vulnerabilities -->
    <Rule Id="CA2101" Action="Warning" />  <!-- Specify marshaling for P/Invoke string arguments -->
    <Rule Id="CA2102" Action="Warning" />  <!-- Catch non-CLSCompliant exceptions in general handlers -->
    <Rule Id="CA2104" Action="Warning" />  <!-- Do not declare read only mutable reference types -->
    <Rule Id="CA2105" Action="Warning" />  <!-- Array fields should not be read only -->
    <Rule Id="CA2106" Action="Warning" />  <!-- Secure asserts -->
    <Rule Id="CA2119" Action="Warning" />  <!-- Seal methods that satisfy private interfaces -->
    <Rule Id="CA2122" Action="Warning" />  <!-- Do not indirectly expose methods with link demands -->
    
    <!-- Exception handling -->
    <Rule Id="CA2200" Action="Warning" />  <!-- Rethrow to preserve stack details -->
    <Rule Id="CA2208" Action="Warning" />  <!-- Instantiate argument exceptions correctly -->
    <Rule Id="CA2214" Action="Warning" />  <!-- Do not call overridable methods in constructors -->
    <Rule Id="CA2215" Action="Warning" />  <!-- Dispose methods should call base class dispose -->
    <Rule Id="CA2216" Action="Warning" />  <!-- Disposable types should declare finalizer -->
    
    <!-- Thread safety -->
    <Rule Id="CA2002" Action="Warning" />  <!-- Do not lock on objects with weak identity -->
    <Rule Id="CA2003" Action="Warning" />  <!-- Do not treat fibers as threads -->
    <Rule Id="CA2004" Action="Warning" />  <!-- Remove calls to GC.KeepAlive -->
    
    <!-- Critical API usage -->
    <Rule Id="CA1063" Action="Warning" />  <!-- Implement IDisposable Correctly -->
    <Rule Id="CA1065" Action="Warning" />  <!-- Do not raise exceptions in unexpected locations -->
    <Rule Id="CA1401" Action="Warning" />  <!-- P/Invokes should not be visible -->
    
    <!-- All other CA rules disabled by default -->
  </Rules>
  
  <!-- Critical C# Rules -->
  <Rules AnalyzerId="Microsoft.CodeAnalysis.CSharp" RuleNamespace="Microsoft.CodeAnalysis.CSharp">
    <!-- Compiler errors and critical warnings only -->
    <Rule Id="CS1062" Action="None" />     <!-- Disable specific compiler warnings -->
    
    <!-- Only essential IDE rules -->
    <Rule Id="IDE0005" Action="Info" />    <!-- Remove unnecessary usings -->
    <Rule Id="IDE0058" Action="None" />    <!-- Expression value is never used (disable - too noisy) -->
    <Rule Id="IDE0059" Action="Info" />    <!-- Unnecessary assignment of a value -->
    
    <!-- All other IDE rules disabled by default -->
  </Rules>
  
  <!-- Disable most style rules -->
  <Rules AnalyzerId="Microsoft.CodeAnalysis.CSharp.Features" RuleNamespace="Microsoft.CodeAnalysis.CSharp.Features">
    <Rule Id="IDE0011" Action="None" />    <!-- Add braces -->
    <Rule Id="IDE0130" Action="None" />    <!-- Namespace does not match folder structure -->
    <Rule Id="IDE0270" Action="None" />    <!-- Use coalesce expression -->
  </Rules>
  
  <!-- Disable most NetAnalyzer rules except critical ones -->
  <Rules AnalyzerId="Microsoft.CodeAnalysis.NetAnalyzers" RuleNamespace="Microsoft.CodeAnalysis.NetAnalyzers">
    <!-- Keep only the most critical rules, disable the rest -->
    <Rule Id="CA1031" Action="None" />     <!-- Do not catch general exception types -->
    <Rule Id="CA1062" Action="None" />     <!-- Validate arguments of public methods -->
    <Rule Id="CA1303" Action="None" />     <!-- Do not pass literals as localized parameters -->
    <Rule Id="CA1307" Action="None" />     <!-- Specify StringComparison -->
    <Rule Id="CA1310" Action="None" />     <!-- Specify StringComparison for correctness -->
    <Rule Id="CA1502" Action="None" />     <!-- Avoid excessive complexity -->
    <Rule Id="CA1508" Action="None" />     <!-- Avoid dead conditional code -->
    <Rule Id="CA1510" Action="None" />     <!-- Use ArgumentNullException throw helper -->
    <Rule Id="CA1515" Action="None" />     <!-- Make types internal -->
    <Rule Id="CA1707" Action="None" />     <!-- Identifiers should not contain underscores -->
    <Rule Id="CA1710" Action="None" />     <!-- Identifiers should have correct suffix -->
    <Rule Id="CA1711" Action="None" />     <!-- Identifiers should not have incorrect suffix -->
    <Rule Id="CA1712" Action="None" />     <!-- Do not prefix enum values with type name -->
    <Rule Id="CA1716" Action="None" />     <!-- Identifiers should not match keywords -->
    <Rule Id="CA1720" Action="None" />     <!-- Identifier contains type name -->
    <Rule Id="CA1724" Action="None" />     <!-- Type names should not match namespaces -->
    <Rule Id="CA1805" Action="None" />     <!-- Do not initialize unnecessarily -->
    <Rule Id="CA1812" Action="None" />     <!-- Avoid uninstantiated internal classes -->
    <Rule Id="CA1819" Action="None" />     <!-- Properties should not return arrays -->
    <Rule Id="CA1822" Action="None" />     <!-- Mark members as static -->
    <Rule Id="CA1825" Action="None" />     <!-- Avoid zero-length array allocations -->
    <Rule Id="CA1852" Action="None" />     <!-- Seal internal types -->
    <Rule Id="CA1861" Action="None" />     <!-- Avoid constant arrays as arguments -->
    <Rule Id="CA2201" Action="None" />     <!-- Do not raise reserved exception types -->
    <Rule Id="CA2263" Action="None" />     <!-- Prefer generic overload when type is known -->
  </Rules>
</RuleSet>